# see https://github.com/nicolas-van/rust-cross-compile-example/blob/main/.github/workflows/rust.yml
name: Rust

on:
  push:

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    # necessary for windows
    shell: bash

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Cargo cache
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           ~/.cargo/registry
  #           ./target
  #         key: test-cargo-registry
  #     - name: List
  #       run: find ./
  #     - name: Run tests
  #       run: cargo test --verbose

  build:
    strategy:
      fail-fast: false
      matrix:
        # a list of all the targets
        include:
          - TARGET: x86_64-unknown-linux-gnu
            OS: ubuntu-latest
          - TARGET: x86_64-apple-darwin
            OS: macos-latest
          - TARGET: x86_64-pc-windows-msvc
            OS: windows-latest
    # needs: test
    runs-on: ${{ matrix.OS }}
    env:
      # NAME: music-randomizer # change with the name of your project
      TARGET: ${{ matrix.TARGET }}
      OS: ${{ matrix.OS }}
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies ubuntu
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends pkg-config libavutil-dev libswresample-dev libavformat-dev libavfilter-dev libavdevice-dev libavcodec-dev
        if: matrix.OS == 'ubuntu-latest'
      - name: Install dependencies mac
        run: |
          brew install ffmpeg pkg-config
        if: matrix.OS == 'macos-latest'
      - name: Install dependencies
        run: |
          $VCINSTALLDIR = $(& "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath)
          Add-Content $env:GITHUB_ENV "LIBCLANG_PATH=${VCINSTALLDIR}\VC\Tools\LLVM\x64\bin`n"
          Invoke-WebRequest "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full-shared.7z" -OutFile ffmpeg-release-full-shared.7z
          7z x ffmpeg-release-full-shared.7z
          mkdir ffmpeg
          mv ffmpeg-*/* ffmpeg/
          Add-Content $env:GITHUB_ENV "FFMPEG_DIR=${pwd}\ffmpeg`n"
          Add-Content $env:GITHUB_PATH "${pwd}\ffmpeg\bin`n"
        if: matrix.OS == 'windows-latest'
        shell: powershell
      - name: Cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ./target
          key: build-cargo-registry-${{matrix.TARGET}}
      - name: List
        run: find ./
      - name: Install rust target
        run: rustup target add $TARGET
      - name: Run build
        run: cd music-randomizer && cargo build --release --verbose --target $TARGET
      - name: Run build
        run: cd brstm-encoder && cargo build --release --verbose --target $TARGET
      - name: List target
        run: find ./target
      - name: Compress
        run: |
          mkdir -p ./artifacts
          # windows is the only OS using a different convention for executable file name
          if [[ $OS =~ ^windows.*$ ]]; then
              EXEC_SUFFIX=.exe
          else
              EXEC_SUFFIX=
          fi
          if [[ $GITHUB_REF_TYPE =~ ^tag$ ]]; then
            TAG=$GITHUB_REF_NAME
          else
            TAG=$GITHUB_SHA
          fi
          mv ./target/$TARGET/release/music-randomizer$EXEC_SUFFIX ./artifacts
          mv ./target/$TARGET/release/brstm-encoder$EXEC_SUFFIX ./artifacts
      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OS }}
          path: |
            ./artifacts
